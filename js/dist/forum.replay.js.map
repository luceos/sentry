{"version":3,"file":"forum.replay.js","mappings":"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","sources":["webpack://@fof/sentry/../../src/node.ts","webpack://@fof/sentry/../../src/env.ts","webpack://@fof/sentry/webpack/bootstrap","webpack://@fof/sentry/webpack/runtime/compat get default export","webpack://@fof/sentry/webpack/runtime/define property getters","webpack://@fof/sentry/webpack/runtime/global","webpack://@fof/sentry/webpack/runtime/harmony module decorator","webpack://@fof/sentry/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/sentry/external root \"flarum.reg.get('core', 'forum/app')\"","webpack://@fof/sentry/../../src/worldwide.ts","webpack://@fof/sentry/../../src/logger.ts","webpack://@fof/sentry/../../src/is.ts","webpack://@fof/sentry/../../src/browser.ts","webpack://@fof/sentry/../../src/string.ts","webpack://@fof/sentry/../../src/object.ts","webpack://@fof/sentry/../../src/misc.ts","webpack://@fof/sentry/../../src/syncpromise.ts","webpack://@fof/sentry/../../src/eventProcessors.ts","webpack://@fof/sentry/../../src/time.ts","webpack://@fof/sentry/../../src/constants.ts","webpack://@fof/sentry/../../src/session.ts","webpack://@fof/sentry/../../src/stacktrace.ts","webpack://@fof/sentry/../../src/normalize.ts","webpack://@fof/sentry/../../src/memo.ts","webpack://@fof/sentry/../../../src/utils/spanUtils.ts","webpack://@fof/sentry/../../../src/utils/prepareEvent.ts","webpack://@fof/sentry/../../src/exports.ts","webpack://@fof/sentry/../../../src/utils/getRootSpan.ts","webpack://@fof/sentry/../../../src/tracing/dynamicSamplingContext.ts","webpack://@fof/sentry/../../../src/utils/applyScopeDataToEvent.ts","webpack://@fof/sentry/../../src/scope.ts","webpack://@fof/sentry/../../src/version.ts","webpack://@fof/sentry/../../src/hub.ts","webpack://@fof/sentry/../../src/integration.ts","webpack://@fof/sentry/../../../src/integrations/inboundfilters.ts","webpack://@fof/sentry/../../../src/integrations/functiontostring.ts","webpack://@fof/sentry/../../../src/helpers.ts","webpack://@fof/sentry/../../../../src/integrations/trycatch.ts","webpack://@fof/sentry/../../../src/instrument/_handlers.ts","webpack://@fof/sentry/../../../src/instrument/globalError.ts","webpack://@fof/sentry/../../../src/instrument/globalUnhandledRejection.ts","webpack://@fof/sentry/../../../src/eventbuilder.ts","webpack://@fof/sentry/../../../../src/integrations/globalhandlers.ts","webpack://@fof/sentry/../../../src/instrument/console.ts","webpack://@fof/sentry/../../../src/instrument/dom.ts","webpack://@fof/sentry/../../../src/instrument/xhr.ts","webpack://@fof/sentry/../../src/supports.ts","webpack://@fof/sentry/../../../src/instrument/fetch.ts","webpack://@fof/sentry/../../../src/vendor/supportsHistory.ts","webpack://@fof/sentry/../../../src/instrument/history.ts","webpack://@fof/sentry/../../src/severity.ts","webpack://@fof/sentry/../../src/url.ts","webpack://@fof/sentry/../../../../src/integrations/breadcrumbs.ts","webpack://@fof/sentry/../../src/aggregate-errors.ts","webpack://@fof/sentry/../../../../src/integrations/linkederrors.ts","webpack://@fof/sentry/../../../../src/integrations/httpcontext.ts","webpack://@fof/sentry/../../../src/buildPolyfills/_optionalChain.ts","webpack://@fof/sentry/../../../src/utils/isSentryRequestUrl.ts","webpack://@fof/sentry/../../src/semanticAttributes.ts","webpack://@fof/sentry/../../src/dsn.ts","webpack://@fof/sentry/../../src/isBrowser.ts","webpack://@fof/sentry/../../../src/common/debug-build.ts","webpack://@fof/sentry/../../../src/browser/types.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getNavigationEntry.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getActivationStart.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/onHidden.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getVisibilityWatcher.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/observe.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getLCP.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/initMetric.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/generateUniqueID.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/bindReporter.ts","webpack://@fof/sentry/../../../src/browser/instrument.ts","webpack://@fof/sentry/../../../src/constants.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","webpack://@fof/sentry/../../../src/buildPolyfills/_nullishCoalesce.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","webpack://@fof/sentry/../../../src/util/timestamp.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addBreadcrumbEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/domUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/onWindowOpen.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleClick.ts","webpack://@fof/sentry/../../../src/util/createBreadcrumb.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../src/coreHandlers/util/getAttributesToRecord.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleDom.ts","webpack://@fof/sentry/../../../src/util/createPerformanceEntries.ts","webpack://@fof/sentry/../../../src/coreHandlers/performanceObserver.ts","webpack://@fof/sentry/../../../src/eventBuffer/error.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferArray.ts","webpack://@fof/sentry/../../../src/eventBuffer/WorkerHandler.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferCompressionWorker.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferProxy.ts","webpack://@fof/sentry/../../../src/util/hasSessionStorage.ts","webpack://@fof/sentry/../../../src/util/isSampled.ts","webpack://@fof/sentry/../../../src/session/Session.ts","webpack://@fof/sentry/../../../src/session/saveSession.ts","webpack://@fof/sentry/../../../src/session/createSession.ts","webpack://@fof/sentry/../../../src/util/isExpired.ts","webpack://@fof/sentry/../../../src/util/isSessionExpired.ts","webpack://@fof/sentry/../../../src/session/shouldRefreshSession.ts","webpack://@fof/sentry/../../../src/session/loadOrCreateSession.ts","webpack://@fof/sentry/../../../src/session/fetchSession.ts","webpack://@fof/sentry/../../../src/util/addEvent.ts","webpack://@fof/sentry/../../../src/util/eventUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleAfterSendEvent.ts","webpack://@fof/sentry/../../../src/util/createPerformanceSpans.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/shouldFilterRequest.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/networkUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/fetchUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/xhrUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleFetch.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleXhr.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleScope.ts","webpack://@fof/sentry/../../../src/util/addGlobalListeners.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleHistory.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleGlobalEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/isRrwebError.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","webpack://@fof/sentry/../../src/baseclient.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleBeforeSendEvent.ts","webpack://@fof/sentry/../../../src/util/addMemoryEntry.ts","webpack://@fof/sentry/../../../src/util/handleRecordingEmit.ts","webpack://@fof/sentry/../../../src/types/rrweb.ts","webpack://@fof/sentry/../../../src/util/prepareReplayEvent.ts","webpack://@fof/sentry/../../../src/util/sendReplayRequest.ts","webpack://@fof/sentry/../../../src/util/prepareRecordingData.ts","webpack://@fof/sentry/../../../src/util/createReplayEnvelope.ts","webpack://@fof/sentry/../../src/envelope.ts","webpack://@fof/sentry/../../src/ratelimit.ts","webpack://@fof/sentry/../../../src/util/sendReplay.ts","webpack://@fof/sentry/../../../src/util/throttle.ts","webpack://@fof/sentry/../../../src/replay.ts","webpack://@fof/sentry/../../../src/util/debounce.ts","webpack://@fof/sentry/../../../src/session/clearSession.ts","webpack://@fof/sentry/../../../src/eventBuffer/index.ts","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/index.js","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/worker.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleKeyboardEvent.ts","webpack://@fof/sentry/../../../src/util/getPrivacyOptions.ts","webpack://@fof/sentry/../../../src/integration.ts","webpack://@fof/sentry/../../../src/util/maskAttribute.ts","webpack://@fof/sentry/../../src/error.ts","webpack://@fof/sentry/../../src/api.ts","webpack://@fof/sentry/../../../src/metrics/envelope.ts","webpack://@fof/sentry/../../../src/metrics/utils.ts","webpack://@fof/sentry/../../../src/client.ts","webpack://@fof/sentry/../../../src/utils/sdkMetadata.ts","webpack://@fof/sentry/../../../src/userfeedback.ts","webpack://@fof/sentry/../../src/clientreport.ts","webpack://@fof/sentry/../../../src/transports/base.ts","webpack://@fof/sentry/../../src/promisebuffer.ts","webpack://@fof/sentry/../../../../src/transports/utils.ts","webpack://@fof/sentry/../../../../src/transports/fetch.ts","webpack://@fof/sentry/../../../src/stack-parsers.ts","webpack://@fof/sentry/../../../../src/integrations/dedupe.ts","webpack://@fof/sentry/../../../src/sdk.ts","webpack://@fof/sentry/../../../src/captureconsole.ts","webpack://@fof/sentry/./src/forum/index.js"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\tflarum.reg._webpack_runtimes[\"fof-sentry\"] ||= __webpack_require__;// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/app');","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","export const SDK_VERSION = '7.119.1';\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n","import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ as any).process !== undefined && ((GLOBAL_OBJ as any).process as ElectronProcess).type === 'renderer'\n  );\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document!.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): void => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (WINDOW.document && WINDOW.document.visibilityState) {\n    firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event' | 'first-input',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n","import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n","import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n","import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\n\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import app from 'flarum/forum/app';\nimport { BrowserClient, defaultStackParser, getCurrentHub, makeFetchTransport, showReportDialog, Breadcrumbs, GlobalHandlers, InboundFilters, FunctionToString, LinkedErrors, HttpContext, TryCatch, BrowserTracing, Replay } from '@sentry/browser';\nimport { CaptureConsole } from '@sentry/integrations';\nconst integrations = [new InboundFilters(), new FunctionToString(), new TryCatch(), new GlobalHandlers({\n  onerror: true,\n  onunhandledrejection: true\n}), new Breadcrumbs({\n  console: true,\n  dom: true,\n  fetch: true,\n  history: true,\n  sentry: true,\n  xhr: true\n}), new LinkedErrors({\n  key: 'cause',\n  limit: 5\n}), new HttpContext()];\nif (__SENTRY_TRACING__) {\n  integrations.push(new BrowserTracing());\n}\nif (__SENTRY_SESSION_REPLAY__) {\n  integrations.push(new Replay());\n}\nconst createClient = config => new BrowserClient({\n  dsn: config.dsn,\n  transport: makeFetchTransport,\n  stackParser: defaultStackParser,\n  beforeSend: event => {\n    event.logger = 'javascript';\n    if (config.scrubEmails && event.user?.email) {\n      delete event.user.email;\n    }\n    if (config.showFeedback && event.exception) {\n      showReportDialog({\n        eventId: event.event_id,\n        user: Sentry.getUserData('name')\n      });\n    }\n    return event;\n  },\n  tracesSampleRate: config.tracesSampleRate,\n  replaysSessionSampleRate: config.replaysSessionSampleRate,\n  replaysOnErrorSampleRate: config.replaysOnErrorSampleRate,\n  integrations: [...integrations, config.captureConsole && new CaptureConsole()].filter(Boolean)\n});\nwindow.Sentry = {\n  createClient,\n  getCurrentHub,\n  showReportDialog\n};\nwindow.Sentry.getUserData = function (nameAttr) {\n  if (nameAttr === void 0) {\n    nameAttr = 'username';\n  }\n  /** @type {Sentry.User} */\n  let userData = {};\n\n  // Depending on when the error occurs, `app` might not be defined\n  if (app) {\n    const user = app.session?.user;\n    if (app.session && user && user.id() != 0) {\n      userData = {\n        ip_address: '{{auto}}',\n        id: user.id(),\n        [nameAttr]: user.username()\n      };\n      if (!app.data['fof-sentry.scrub-emails']) {\n        userData.email = user.email();\n      }\n    } else if (app.data.session && app.data.session.userId != 0) {\n      userData = {\n        id: app.data.session.userId\n      };\n    }\n  }\n  return userData;\n};\napp.initializers.add('fof/sentry', () => {\n  getCurrentHub().setUser(Sentry.getUserData());\n});"],"names":["isNodeEnv","__SENTRY_BROWSER_BUNDLE__","Object","prototype","toString","call","process","__webpack_module_cache__","__webpack_require__","moduleId","flarum","reg","_webpack_runtimes","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","hmd","create","children","set","Error","obj","prop","hasOwnProperty","isGlobalObj","Math","GLOBAL_OBJ","self","global","getGlobalObject","getGlobalSingleton","name","creator","gbl","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","keys","forEach","level","originalConsoleMethod","logger","enabled","enable","disable","isEnabled","makeLogger","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","then","base","_e","isVueViewModel","__isVue","_isVue","WINDOW","htmlTreeAsString","elem","options","currentElem","MAX_TRAVERSE_HEIGHT","out","height","len","separator","sepLength","length","nextStr","keyAttrs","Array","isArray","maxStringLength","_htmlElementAsString","push","parentNode","reverse","join","_oO","el","classes","attr","i","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","truncate","str","max","slice","safeJoin","input","delimiter","output","value","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","writable","configurable","o_O","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","stack","getOwnProperties","newObj","type","target","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","getPrototypeOf","constructor","isPojo","memoVal","returnValue","item","uuid4","crypto","msCrypto","getRandomByte","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","c","getFirstException","event","exception","values","getEventDescription","event_id","eventId","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","err","States","resolvedSyncPromise","SyncPromise","resolve","rejectedSyncPromise","reason","reject","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","onfulfilled","onrejected","result","_executeHandlers","catch","val","finally","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","handler","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","hint","index","processor","final","dateTimestampInSeconds","Date","now","timestampInSeconds","performance","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","_browserPerformanceTimeOriginMode","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","DEFAULT_ENVIRONMENT","updateSession","session","context","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","defaultFunctionName","getFunctionName","fn","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","WeakSet","inner","has","add","delete","splice","memoBuilder","memoize","unmemoize","stringified","_events","document","isSyntheticEvent","objName","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","spanToTraceContext","span","spanId","span_id","traceId","trace_id","spanContext","op","parent_span_id","tags","origin","spanToJSON","getSpanJSON","spanIsSpanClass","debugIdStackParserCache","WeakMap","captureContextKeys","captureEvent","getCurrentHub","addBreadcrumb","breadcrumb","getClient","getRootSpan","transaction","getDynamicSamplingContextFromClient","client","scope","getOptions","publicKey","public_key","getDsn","segment","user_segment","getUser","dsc","emit","getDynamicSamplingContextFromSpan","getScope","txn","v7FrozenDsc","_frozenDynamicSamplingContext","sampleRate","maybeSampleRate","metadata","sample_rate","jsonSpan","description","sampled","traceFlags","spanIsSampled","applyScopeDataToEvent","fingerprint","breadcrumbs","sdkProcessingMetadata","extra","contexts","transactionName","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","trace","rootSpan","dynamicSamplingContext","applySpanToEvent","maybeArray","concat","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","eventProcessors","attachments","propagationContext","mergeAndOverwriteScopeData","mergeVal","globalScope","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","clone","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setTags","setTag","setExtras","extras","setExtra","setFingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","setSession","getSession","update","captureContext","scopeToMerge","scopeData","getScopeData","scopeContext","clear","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","captureException","warn","syntheticException","originalException","captureMessage","substring","SDK_VERSION","API_VERSION","parseFloat","DEFAULT_BREADCRUMBS","Hub","isolationScope","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","version","top","getStackTop","setupIntegrations","pushScope","getStack","popScope","pop","withScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","beforeBreadcrumb","finalBreadcrumb","configureScope","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","navigator","startingTime","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","method","sentry","getMainCarrier","extensions","_len","arguments","args","_key","apply","hub","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","afterSetupIntegrations","integrations","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","on","preprocessEvent","bind","processEvent","assign","convertIntegrationFnToClass","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","possibleMessages","lastException","_getPossibleEventMessages","_isIgnoredError","_isIgnoredTransaction","url","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","frames","stacktrace","frame","filename","_getLastValidUrl","oO","originalFunctionToString","SETUP_CLIENTS","functionToStringIntegration","_functionToStringIntegration","originalFunction","FunctionToString","ignoreOnError","shouldIgnoreOnError","wrap","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","ex","setTimeout","rest","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","_options","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","originalCallback","function","originalSend","xhr","wrapOptions","_len2","_key2","globalObject","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","_oldOnErrorHandler","instrumentError","onerror","msg","line","column","error","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","normalizeDepth","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","_ref","maxLength","sort","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","ERROR_TYPES_RE","groups","match","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","addGlobalErrorInstrumentationHandler","_installGlobalOnErrorHandler","e2","_getUnhandledRejectionError","addGlobalUnhandledRejectionInstrumentationHandler","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","colno","isNaN","parseInt","lineno","location","href","getLocationHref","in_app","instrumentConsole","log","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","clearTimeout","SENTRY_XHR_DATA_KEY","instrumentXHR","xhrproto","originalOpen","startTimestamp","toUpperCase","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","onreadystatechange","readyStateArgs","_len3","setRequestHeaderArgs","_key3","header","sentryXhrData","_len4","_key4","body","isNativeFetch","instrumentFetch","EdgeRuntime","Headers","Request","Response","supportsFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","lastHref","instrumentHistory","chromeVar","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","from","to","validSeverityLevels","query","fragment","host","path","protocol","search","hash","relative","breadcrumbsIntegration","dom","addConsoleInstrumentationHandler","category","_getConsoleBreadcrumbHandler","componentName","serializeAttribute","element","_isEvent","getComponentName","_getDomBreadcrumbHandler","addXhrInstrumentationHandler","_getXhrBreadcrumbHandler","addFetchInstrumentationHandler","_getFetchBreadcrumbHandler","addHistoryInstrumentationHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","exceptions","maxValueLength","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","linkedErrorsIntegration","LinkedErrors","httpContextIntegration","_httpContextIntegration","request","referrer","headers","Referer","HttpContext","_optionalChain","ops","lastAccessLHS","browserPerformanceTimeOrigin","getCurrentScope","removeTrailingSlash","dsnToString","dsn","withPassword","pass","port","projectId","isBrowser","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType","getNavigationEntryFromPerformanceTiming","navigation","navigationEntry","entryType","startTime","getActivationStart","navEntry","activationStart","onHidden","cb","once","onHiddenOrPageHide","visibilityState","removeEventListener","firstHiddenTime","observe","opts","PerformanceObserver","supportedEntryTypes","po","list","getEntries","buffered","reportedMetricIDs","onLCP","onReport","visibilityWatcher","prerendering","Infinity","timeStamp","metric","initMetric","navigationType","rating","delta","entries","floor","report","handleEntries","lastEntry","bindReporter","prevValue","forceReport","stopListening","takeRecords","disconnect","capture","_previousLcp","instrumentLcp","getCleanupCallback","REPLAY_SESSION_KEY","UNABLE_TO_SEND_REPLAY","DEFAULT_FLUSH_MIN_DELAY","DEFAULT_FLUSH_MAX_DELAY","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MIN_REPLAY_DURATION","MAX_REPLAY_DURATION","_optionalChain$5","NodeType$1","isShadowRoot","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","s","rules","cssRules","cssText","stringifyRule","rule","importStringified","isCSSImportRule","styleSheet","statement","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","NodeType","Mirror","idNodeMap","nodeMetaMap","getId","lhs","_3","getMeta","_4","_5","getNode","getIds","removeNodeFromMap","childNodes","childNode","hasNode","node","meta","oldNode","reset","shouldMaskInput","maskInputOptions","maskInputValue","_ref2","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","_id","tagNameRegex","RegExp","genId","canvasService","canvasCtx","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","extractOrigin","parts","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","attributeValue","trim","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","exec","descriptorsStr","inParens","charAt","getAbsoluteSrcsetString","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","createMatchPredicate","selector","matches","regex","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","skipChild","inlineStylesheet","maskTextFn","slimDOMOptions","dataURLOptions","inlineImages","recordCanvas","onSerialize","onIframeLoad","iframeLoadTimeout","onStylesheetLoad","stylesheetLoadTimeout","keepIframeSrcFn","newlyAddedElement","preserveWhiteSpace","_serializedNode","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","attributes","stylesheet","styleSheets","find","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","ctx","getContext","x","width","y","getImageData","originalGetImageData","Uint32Array","min","buffer","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","oldValue","crossOrigin","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","complete","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","getBoundingClientRect","class","rr_width","rr_height","isCustomElement","src","contentDocument","rr_src","customElements","isSVG","ownerSVGElement","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","serializeNode","sn","comment","script","as","endsWith","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","childN","serializedChildNode","isElement$1","isShadow","iframeEl","win","fired","timer","blankUrl","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","timeout","previous","leading","remaining","getImplementation","clearTimeout$1","trailing","setTimeout$1","hookSetter","isRevoked","patch","replacement","defineProperties","__rrweb_original__","Proxy","Reflect","receiver","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","getTime","StyleSheetMirror","styleIDMap","idStyleMap","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","rootShadowHost","getRootShadowHost","shadowHostInDom","cachedImplementations","cached","impl","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","_len5","_key5","isNodeInLinkedList","DoubleLinkedList","tail","position","current","next","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","payload","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","m","attributeName","isInputMasked","setAttribute","unattachedDoc","implementation","createHTMLDocument","old","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","r","size","_isAncestorInSet","errorHandler","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","_len6","_key6","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","_ref5","scrollCb","sampling","evt","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","_ref8","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","v","lastInputValue","currentWindow","h","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","p","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","_ref13","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","_15","_16","adoptStyleSheets","initObservers","_hooks","mutationObserver","mousemoveHandler","_ref3","mousemoveCb","mousemove","callbackThreshold","mousemoveCallback","timeBaseline","positions","wrappedCb","totalOffset","timeOffset","updatePosition","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","_ref4","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","Number","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initMouseInteractionObserver","scrollHandler","viewportResizeHandler","_ref6","_ref7","viewportResizeCb","lastH","lastW","initViewportResizeObserver","inputHandler","mediaInteractionHandler","_ref16","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","_ref9","_ref10","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","deleteRule","replaceSync","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","_ref11","typeKey","_ref12","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","_ref14","_ref15","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_17","removeProperty","remove","initStyleDeclarationObserver","fontObserver","collectFonts","_ref17","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","count","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","start","end","initSelectionObserver","customElementObserver","_ref18","customElementCb","define","initCustomElementObserver","pluginHandlers","plugin","plugins","b","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","getRemoteId","getRemoteIds","ids","_optionalChain$1","_len7","_key7","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","addLoadListener","IframeManager","iframes","crossOriginIframeMap","wrappedEmit","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","child","ShadowDomManagerNoop","ShadowDomManager","shadowDoms","restoreHandlers","patchAttachShadow","iframeElement","manager","option","CanvasManagerNoop","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","linkEl","trackStylesheetInLinkElement","adoptedStyleSheetData","styleIds","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","onRequestAnimationFrame","thisBuffer","buffers","destroy","_takeFullSnapshot","record","checkoutEveryNms","checkoutEveryNth","maskAllInputs","_maskInputOptions","_slimDOMOptions","maxCanvasSize","packFn","mousemoveWait","recordAfter","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","color","date","month","number","tel","time","week","select","radio","checkbox","lastFullSnapshotEvent","_this","NodeList","DOMTokenList","TypeError","polyfill","incrementalSnapshotCount","eventProcessor","buf","postMessage","exceedCount","exceedTime","takeFullSnapshot","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","slimDOM","initialOffset","canvasMutationCb","CustomElement","timestampToMs","timestampToS","addBreadcrumbEvent","replay","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","tag","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","addListeners","cleanupWindowOpen","nowInSeconds","originalWindowOpen","_len8","_key8","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","click","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","timedOutClicks","mutationAfter","scrollAfter","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","getBaseDomBreadcrumb","isElement","ENTRY_TYPES","entry","initiatorType","responseEnd","decodedBodySize","encodedBodySize","responseStatus","transferSize","getAbsoluteTime","statusCode","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","setupPerformanceObserver","addPerformanceEntry","performanceEntries","onEntries","_ref19","clearCallbacks","stopOnCallback","durationThreshold","instrumentPerformanceObserver","addPerformanceInstrumentationHandler","previousValue","addMetricObserver","_ref20","replayPerformanceEntries","getLargestContentfulPaint","clearCallback","EventBufferSizeExceededError","super","EventBufferArray","events","_totalSize","hasCheckout","hasEvents","addEvent","eventSize","finish","Promise","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","ensureReady","_ensureReadyPromise","_ref21","success","terminate","_getAndIncrementId","_ref22","EventBufferCompressionWorker","_earliestTimestamp","_sendEventToWorker","_finishRequest","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","ensureWorkerIsLoaded","_switchToCompressionWorker","addEventPromises","all","hasSessionStorage","sessionStorage","isSampled","lastActivity","segmentId","previousSessionId","saveSession","setItem","createSession","_ref24","_temp","sessionSampleRate","allowBuffering","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","_ref25","maxReplayDuration","sessionIdleExpire","shouldRefreshSession","_ref26","loadOrCreateSession","_ref27","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","getItem","parse","fetchSession","addEventSync","shouldAddEvent","_addEvent","async","eventBuffer","recordingMode","eventAfterPossibleCallback","isCustomEvent","maybeApplyCallback","beforeAddRecordingEvent","stop","recordDroppedEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","_experiments","isTransactionEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","transport","getTransport","send","__sentry__baseTransport__","isBaseTransportSend","sendResponse","replayContext","traceIds","handleTransactionEvent","errorIds","replayId","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","createPerformanceSpans","_ref28","addNetworkBreadcrumb","hubOrClient","isHub","tunnel","checkDsn","checkTunnel","isSentryRequestUrl","getBodySize","textEncoder","encode","URLSearchParams","FormData","formDataStr","_serializeFormData","Blob","ArrayBuffer","byteLength","parseContentLengthHeader","getBodyString","mergeWarning","info","warning","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","normalizedBody","exceedsSizeLimit","isProbablyJson","first","last","_strIsProbablyJson","truncatedBody","e3","normalizeNetworkBody","getAllowedHeaders","allowedHeaders","reduce","filteredHeaders","formData","urlMatches","urls","fullUrl","baseURI","fixedUrl","URL","getFullUrl","_getFetchRequestArgBody","getAllHeaders","allHeaders","getHeadersFromOptions","handleNetworkBreadcrumbs","TextEncoder","networkDetailAllowUrls","networkDetailDenyUrls","networkCaptureBodies","networkRequestHeaders","networkResponseHeaders","_isXhrBreadcrumb","_isXhrHint","reqSize","resSize","getResponseHeader","responseType","_getBodySize","request_body_size","response_body_size","enrichXhrBreadcrumb","requestBodySize","responseBodySize","getAllResponseHeaders","acc","getResponseHeaders","requestBody","requestWarning","responseBody","responseWarning","responseText","outerHTML","_parseXhrResponse","_getXhrResponseBody","_prepareXhrData","captureXhrBreadcrumbToReplay","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","captureDetails","_ref29","bodyStr","_getRequestInfo","_ref30","bodyText","_tryCloneResponse","_getResponseText","txt","_tryGetResponseText","_parseFetchResponseBody","_ref31","getResponseData","_getResponseInfo","_prepareFetchData","captureFetchBreadcrumbToReplay","beforeAddNetworkBreadcrumb","handleFetch","handleFetchSpanListener","handleXhr","handleXhrSpanListener","_LAST_BREADCRUMB","addGlobalListeners","newBreadcrumb","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","handleScopeListener","isClick","getDomTarget","handleDom","clickDetector","altKey","metaKey","ctrlKey","shiftKey","handleDomListener","handleHistory","handleHistorySpanListener","includeAfterSendEventHandling","afterSendHandler","isReplayEvent","flush","feedback","replay_id","getSessionId","feedbackId","addFeedbackBreadcrumb","__rrweb__","isRrwebError","captureExceptions","isErrorEventSampled","errorSampleRate","shouldSampleForBufferEvent","handleGlobalEventListener","hasHooks","exceptionValue","handleHydrationError","handleBeforeSendEvent","lastTransaction","feedbackEvent","includeReplay","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","memory","getHandleRecordingEmit","hadFirstEvent","_isCheckout","isIncrementalEvent","isIncrementalMouseInteraction","updateClickDetectorForRecordingEvent","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","prepareReplayEvent","_ref33","eventHint","_integrations","preparedEvent","normalizeMaxBreadth","prepared","dist","applyClientOptions","integrationNames","sdk","applyIntegrationsMetadata","debugIdMap","_sentryDebugIds","debugIdStackFramesCache","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","getEventProcessors","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","spans","normalizeEvent","prepareEvent","platform","getSdkMetadata","sendReplayRequest","_ref34","recordingData","segment_id","eventContext","preparedRecordingData","_ref32","payloadWithSequence","replayHeaders","sequence","prepareRecordingData","baseEvent","replay_start_timestamp","error_ids","trace_ids","replay_type","replayEvent","envelope","sdkInfo","sent_at","createEventEnvelopeHeaders","metadataOrEvent","getSdkMetadataForEnvelopeHeader","items","createReplayEnvelope","cause","TransportStatusCodeError","rateLimits","limits","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","namespaces","headerDelay","delay","headerDate","parseRetryAfterHeader","updateRateLimits","dataCategory","disabledUntil","RateLimitError","sendReplay","replayData","retryConfig","interval","_retryCount","THROTTLED","ReplayContainer","_ref35","recordingOptions","__init5","__init6","_lastActivity","_isEnabled","_isPaused","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","debounced","cancel","debounce","_flush","flushMinDelay","flushMaxDelay","_throttledAddEvent","maxCount","durationSeconds","counter","isThrottled","_cleanup","wasThrottled","throttle","slowClickTimeout","slowClickIgnoreSelectors","_canvas","initializeSampling","_initializeSessionForSampling","_initializeRecording","_handleException","_updateUserActivity","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","_temp2","forceFlush","_removeListeners","force","removeItem","deleteSession","pause","resume","_checkSession","_temp3","continueRecording","flushImmediate","activityTime","hasStoppedRecording","_updateSessionActivity","_maybeSaveSession","cbResult","updateUserActivity","conditionalFlush","cancelFlush","urlPath","pathname","_clearContext","_ref23","workerUrl","customWorkerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","createObjectURL","_loadWorker","createEventBuffer","_addListeners","_refreshSession","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","_performanceCleanupCallback","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","isInputElement","hasModifierKey","isCharacterKey","getKeyboardBreadcrumb","handleKeyboardEvent","_createCustomBreadcrumb","_addPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","addMemoryEntry","_this2","_temp4","tooShort","minReplayDuration","tooLong","_flushLock","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay$1","__initStatic","_temp5","mask","maskAttributes","unmask","block","unblock","ignore","maskFn","privacyOptions","_ref36","getPrivacyOptions","password","_ref37","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","_setup","_initialize","getReplayId","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration","getIntegrationByName","DSN_REGEX","dsnFromComponents","components","makeDsn","lastPath","projectMatch","dsnFromString","createEnvelope","addItemToEnvelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItem","encodeUTF8","serializeEnvelope","envHeaders","append","itemHeaders","stringifiedPayload","totalLength","merged","offset","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","statsd","envelopeItemTypeToDataCategory","SentryError","logLevel","setPrototypeOf","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","_metadata","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","encodeURIComponent","_encodedAuth","BaseClient","_integrationsInitialized","_numProcessing","_outcomes","_dsn","_transport","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","capturedSpanScope","sendSession","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","forceInitialize","_setupIntegrations","getIntegrationById","integrationId","integrationName","addIntegration","isAlreadyInstalled","sendEvent","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelope","promise","_sendEnvelope","createSessionEnvelope","eventOrCount","sendClientReports","captureAggregateMetrics","metricBucketItems","metricsEnvelope","tagEntries","maybeTags","unit","metricType","serializeMetricBuckets","createMetricEnvelopeItem","createMetricEnvelope","hook","_updateSessionFromEvent","crashed","errored","sessionNonTerminal","ticked","clearInterval","_prepareEvent","parentSpanId","_processEvent","finalEvent","isTransaction","beforeSendLabel","capturedSpanIsolationScope","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","transaction_info","_clearOutcomes","outcomes","quantity","BrowserClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","discarded_events","createTransport","makeRequest","task","$","taskProducer","drain","capturedSetTimeout","makePromiseBuffer","bufferSize","filteredEnvelopeItems","isRateLimited","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","requestTask","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","localStack","stripSentryFramesAndReverse","createStackParser","subMatch","extractSafariExtensionDetails","isSafariExtension","isSafariWebExtension","dedupeIntegration","_dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","showReportDialog","dsnLike","dialogOptions","endpoint","encodedOptions","getReportDialogEndpoint","onLoad","onload","onClose","reportDialogClosedMessageHandler","injectionPoint","severityLevelFromString","CaptureConsole","levels","consoleHandler","Sentry","createClient","config","scrubEmails","showFeedback","getUserData","tracesSampleRate","captureConsole","nameAttr","userData","userId"],"sourceRoot":""}